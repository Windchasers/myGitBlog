{"version":3,"sources":["pages/Menu.js","pages/Header.js","pages/home.jsx","App.js","reportWebVitals.js","index.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","props","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","List","menuItems","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Header","Home","App","path","component","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ab91814.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { PinDropSharp } from '@material-ui/icons';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function PersistentDrawerLeft(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            \b\b\b台风俱乐部\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {props.menuItems.map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport Menu from './Menu'\nexport default function Header(props) {\n\n    return<Menu menuItems={props.menuItems}></Menu>\n    \n}","import React,{useState} from 'react';\nimport Header from './Header'\n\nexport default function Home(props) {\n    const[menuItems,setMenus] = useState(['博文', '强记', '大道', '迢迢']);\n    \n    function menuItemClick(){\n      \n    }\n\n    return <div>\n        <Header menuItems={menuItems}></Header>\n    </div>\n}","import {BrowserRouter,Route} from 'react-router-dom'\nimport React,{Component} from 'react';\nimport Home from './pages/home'\n\nexport default class App extends Component{\n    render (){\n      return (\n      \t\t<BrowserRouter>\n      \t\t\t<Route path='/' component={Home}></Route>\n      \t\t\t</BrowserRouter>\n      \t)\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}